import { useState } from "react";
import { usePostWarehouse } from "../../hooks/useWarehouses";

function PostWarehouse() {
  const [warehouseName, setWarehouseName] = useState("");
  const postWarehouse = usePostWarehouse();

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (warehouseName == "") return;
    try {
      await postWarehouse.mutateAsync({
        warehouseName: warehouseName,
      });
      setWarehouseName("");
      console.log("Warehouse created successfully!");
    } catch (error) {
      console.error("Failed to create warehouse: ", error);
    }
  };

  const handleInputChange = (e) =>{
    setWarehouseName(e.target.value);
  }

  return(
    <div className="warehouse">
      <h1>ðŸ“¦ Create Warehouse</h1>
    <form onSubmit={handleSubmit}>
        <input
          type="text"
          disabled
          placeholder="Warehouse ID will be auto-generated by the system..."
        />
        <input
          type="text"
          name="warehouseName"
          value={warehouseName}
          onChange={handleInputChange}
          placeholder="Enter warehouse name..."
        />
        <button
          type="submit"
          disabled={postWarehouse.isPending || warehouseName == ""}
        >
          {postWarehouse.isPending ? "Creating..." : "Create Warehouse"}
        </button>
      </form>

      {postWarehouse.isSuccess && (
        <div className="warehouse-details">
          <h1>Warehouse Details</h1>
          <p>âœ… Warehouse created successfully!</p>
          {postWarehouse.data && (
            <p>
              Created: {postWarehouse.data.warehouseName} (ID:{" "}
              {postWarehouse.data.warehouseID})
            </p>
          )}
        </div>
      )}

      {postWarehouse.isError && (
        <div className="warehouse-error">
          <h1>Warehouse error</h1>
          <p>
            Error in creating warehouse :{" "}
            {postWarehouse.error?.response?.data ||
              postWarehouse.error?.message}
          </p>
        </div>
      )}

    </div>
  ) 
}

export default PostWarehouse;